    Profiles
        Profile: Tracker
        	Time: From  7:00AM every 12h Till 10:00PM
        
        
        
        Enter Task: Anon
        
        <<h1><big><big><big>🦊</big></big></big></h1><h3>Project by <b><font color="red">WhirlWolf</font></b></h3>>
        A1: HTTP Request [
             Method: GET
             URL: www.google.com
             Timeout (Seconds): 30
             Structure Output (JSON, etc): On
             Continue Task After Error:On ]
        
        A2: Stop [ ]
            If  [ %http_response_code !~ 200 ]
        
        A3: Flash [
             Text: Checking new episode . . .
             Continue Task Immediately: On
             Dismiss On Click: On ]
        
        A4: Goto [
             Type: Action Label
             Label: Set ]
            If  [ %track_Show Set ]
        
        A5: List Dialog [
             Mode: Select Single Item
             Title: Which show do you want to track?
             Items: %showS
             Close After (Seconds): 30
             First Visible Index: 0 ]
        
        A6: Variable Set [
             Name: %track_Show
             To: %ld_selected
             Max Rounding Digits: 3
             Structure Output (JSON, etc): On ]
        
        <Set>
        A7: HTTP Request [
             Method: GET
             URL: https://next-episode.net/%track_Show
             Timeout (Seconds): 30
             Structure Output (JSON, etc): On ]
        
        A8: Variable Set [
             Name: %http_Data
             To: %http_data
             Max Rounding Digits: 3
             Structure Output (JSON, etc): On ]
        
        A9: Simple Match/Regex [
             Type: Simple
             Text: %http_data
             Match Pattern: <div id="next_episode">
             			<div class="headline"><h2>Next Episode</h2></div>
             			<div></div>
             			<div  style="margin-top:5px;"><div class="subheadline" style="margin-top:0px;top:1;position:absolute"><h3>Name:</h3></div><div class="sub_main">$ne_name</div></div>
             			<div></div>
             			<div class="subheadline"><h3>Countdown:</h3></div><span style="background-color: $countdown_bg_color;padding: 2px; padding-left: 5px; padding-right: 5px;color: white; border-radius:3px">$ne_countdown</span>
             
             						<div></div>
             							<div class="subheadline"><h3>Date:</h3></div>$ne_date<div></div>
             						
             			<div class="subheadline"><h3>Season:</h3></div>$ne_season<div></div>
             			<div  style="margin-top:5px;"><div class="subheadline" style="margin-top:0px;top:1;position:absolute">Episode:</div><div class="sub_main">$ne_no</div></div>
             			<div></div> ]
        
        A10: Multiple Variables Set [
              Names: %ne_Name
             %ne_No
             %ne_Season
             %countdowN
             %match
              Variable Names Splitter: 
             
              Values: %ne_name
             %ne_no
             %ne_season
             %ne_countdown
             %mt_match_found
              Values Splitter: 
             
              Do Maths: On
              Max Rounding Digits: 1
              Structure Output (JSON, etc): On ]
        
        A11: If [ %match ~ true ]
        
            A12: Simple Match/Regex [
                  Type: Simple
                  Text: %ne_date
                  Match Pattern: $day $month #date, #year				 ]
        
            A13: Variable Set [
                  Name: %countdown_date
                  To: %day %month %date, %year
                  Max Rounding Digits: 3
                  Structure Output (JSON, etc): On ]
        
            A14: Parse/Format DateTime [
                  Input Type: Custom
                  Input: %date-%month-%year
                  Input Format: dd-MMM-YYYY
                  Output Format: dd-MM-yy
                  Output Offset Type: None ]
        
            A15: Variable Set [
                  Name: %release_Date
                  To: %formatted
                  Max Rounding Digits: 3
                  Structure Output (JSON, etc): On ]
        
            A16: If [ %DATE ~ %release_Date ]
        
                A17: Notify [
                      Title: %track_Show - S.%ne_Season E.%ne_No
                      Text: New episode releasing today!
                      Icon: mw_notification_live_tv
                      Number: 0
                      Priority: 3
                      LED Colour: Green
                      LED Rate: 0
                      Category: Full Alert Actions:(3) ]
        
                A18: Flash [
                      Text: New episode found! Check notification.
                      Long: On
                      Continue Task Immediately: On
                      Dismiss On Click: On ]
        
                A19: Vibrate [
                      Time: 80 ]
        
                A20: Wait [
                      MS: 100
                      Seconds: 0
                      Minutes: 0
                      Hours: 0
                      Days: 0 ]
        
                A21: Vibrate [
                      Time: 70 ]
        
            A22: End If
        
        A23: End If
        
        
    
        Profile: Notify
        	Time: From %countdown_R Till %countdown_R
        
        
        
        Enter Task: Anon
        
        A1: Notify [
             Title: %track_Show - S.%ne_Season E.%ne_No
             Text: New episode is available now!
             Icon: mw_notification_live_tv
             Number: 0
             Priority: 3
             LED Colour: Green
             LED Rate: 0
             Category: Full Alert Actions:(3) ]
        
        A2: Vibrate [
             Time: 80 ]
        
        A3: Wait [
             MS: 100
             Seconds: 0
             Minutes: 0
             Hours: 0
             Days: 0 ]
        
        A4: Vibrate [
             Time: 70 ]
        
        
    
    Tasks
        Task: Details
        
        A1: Notify Cancel [
             Title: %track_Show - S.%ne_Season E.%ne_No ]
        
        A2: Status Bar [
             Set: Collapsed ]
        
        A3: Simple Match/Regex [
             Type: Simple
             Text: %http_Data
             Match Pattern: <div id="previous_episode">
             			<div class="headline" style="padding-left:0px;"><h2>Previous Episode</h2></div>
             			<div></div>
             			<div  style="margin-top:5px;"><div class="subheadline" style="margin-top:0px;top:1;position:absolute"><h3>Name:</h3></div><div class="sub_main">$pe_name</div></div>
             			<div></div>
             							<div class="subheadline"><h3>Date:</h3></div>$pe_date<div></div>
             						
             			<div class="subheadline"><h3>Season:</h3></div>$pe_season<div></div>
             			<div style="margin-top:5px;"><div class="subheadline" style="margin-top:0px;top:1;position:absolute">Episode:</div><div class="sub_main">$pe_no</div></div>
             			<div></div> ]
        
        A4: Multiple Variables Set [
             Names: %pe_Name
             %pe_No
             %pe_Season
             %pe_Date
             Variable Names Splitter: 
             
             Values: %pe_name
             %pe_no
             %pe_season
             %pe_date
             Values Splitter: 
             
             Max Rounding Digits: 1
             Structure Output (JSON, etc): On ]
        
        A5: Simple Match/Regex [
             Type: Simple
             Text: %http_Data
             Match Pattern: <span itemprop="ratingValue">$rating</span>/5 (<span itemprop="ratingCount">#rating_count</span> ]
        
        A6: Simple Match/Regex [
             Type: Simple
             Text: %http_Data
             Match Pattern: <div><div class="subheadline"  style="margin-top:4px;top:1;position:absolute"><h3>Airs on:</h3></div><div class="sub_main" style="margin-top:4px;">$airs_on</div></div>
             		<div></div> ]
        
        A7: Show Scene [
             Name: SC - Show Tracker
             Display As: Dialog, Dim Behind Heavy
             Horizontal Position: 100
             Vertical Position: 100
             Animation: Scale
             Show Over Keyguard: On
             Continue Task Immediately: On
             Overlay +: On ]
        
        A8: Element Back Colour [
             Scene Name: SC - Show Tracker
             Element: Countdown
             Colour: #FF732000
             End Colour: #FF732000 ]
            If  [ %DATE ~ %release_Date & %countdown_hrs < 2 ]
        
        A9: Element Visibility [
             Scene Name: SC - Show Tracker
             Element Match: Bell
             Set: True
             Animation Time (MS): 0
             Continue Task Immediately: On ]
            If  [ %DATE ~ %release_Date ]
        
        A10: If [ %match ~ true ]
        
            A11: Variable Set [
                  Name: %ep_Info
                  To: Ep. <big><b>%ne_No</b></big><br>Season %ne_Season<br><br><big><b>%ne_Name</b></big>
                  Max Rounding Digits: 5
                  Structure Output (JSON, etc): On ]
        
        A12: Else
        
            A13: Simple Match/Regex [
                  Type: Simple
                  Text: %http_Data
                  Match Pattern: <div id="next_episode">
                 			<div class="headline"><h2>Next Episode</h2></div>
                 			<div></div>$episode_error<br><br>
                 						The TV show is either in vacation or waiting to start their new season. When information about future episodes becomes available, it will be posted here.
                 			
                 		    
                 			<div></div>
                 		</div> ]
        
            A14: Variable Set [
                  Name: %ep_Info
                  To: %episode_error.<br><br><small><font color="gray">Click bell icon to get notification as soon as it is out.</font></small>
                  Max Rounding Digits: 3
                  Structure Output (JSON, etc): On ]
        
            A15: Variable Set [
                  Name: %ep_Info
                  To: No information is available about this show. It may have ended.
                  Max Rounding Digits: 3
                  Structure Output (JSON, etc): On ]
                If  [ %episode_error !Set ]
        
            A16: Element Visibility [
                  Scene Name: SC - Show Tracker
                  Element Match: Countdown
                  Animation Time (MS): 0
                  Continue Task Immediately: On ]
        
            A17: If [ %episode_error !Set ]
        
                A18: Element Visibility [
                      Scene Name: SC - Show Tracker
                      Element Match: NE Background
                      Animation Time (MS): 0
                      Continue Task Immediately: On ]
        
                A19: Element Visibility [
                      Scene Name: SC - Show Tracker
                      Element Match: NE
                      Animation Time (MS): 0
                      Continue Task Immediately: On ]
        
                A20: Element Visibility [
                      Scene Name: SC - Show Tracker
                      Element Match: PE
                      Animation Time (MS): 0
                      Continue Task Immediately: On ]
        
                A21: Element Visibility [
                      Scene Name: SC - Show Tracker
                      Element Match: D2
                      Animation Time (MS): 0
                      Continue Task Immediately: On ]
        
                A22: Element Visibility [
                      Scene Name: SC - Show Tracker
                      Element Match: PE Name
                      Animation Time (MS): 0
                      Continue Task Immediately: On ]
        
                A23: Element Visibility [
                      Scene Name: SC - Show Tracker
                      Element Match: PE Number
                      Animation Time (MS): 0
                      Continue Task Immediately: On ]
        
                A24: Element Visibility [
                      Scene Name: SC - Show Tracker
                      Element Match: PE Season
                      Animation Time (MS): 0
                      Continue Task Immediately: On ]
        
                A25: Element Visibility [
                      Scene Name: SC - Show Tracker
                      Element Match: PE Date
                      Animation Time (MS): 0
                      Continue Task Immediately: On ]
        
            A26: End If
        
        A27: End If
        
        
    
        Task: Notify
        
        A1: Flash [
             Text: . . .
             Continue Task Immediately: On
             Dismiss On Click: On ]
        
        A2: Status Bar [
             Set: Collapsed ]
        
        A3: Variable Clear [
             Name: %countdown_hrs ]
        
        A4: Simple Match/Regex [
             Type: Simple
             Text: %countdowN
             Match Pattern: #countdown_hrs hours ]
        
        A5: Variable Split [
             Name: %TIME
             Splitter: . ]
        
        A6: Variable Add [
             Name: %countdown_hrs
             Value: %TIME1 + 1
             Wrap Around: 24 ]
        
        A7: Variable Set [
             Name: %countdown_R
             To: %countdown_hrs.00
             Max Rounding Digits: 3
             Structure Output (JSON, etc): On ]
        
        A8: Flash [
             Text: Alright! Reminder set.
             Continue Task Immediately: On
             Dismiss On Click: On ]
        
        
    
        Task: Change Show
        
        A1: Notify Cancel [
             Title: %track_Show - S.%ne_Season E.%ne_No ]
        
        A2: Status Bar [
             Set: Collapsed ]
        
        <List>
        A3: List Dialog [
             Mode: Select Single Item
             Title: Which show do you want to track?
             Items: %showS
             Button 1: Add
             Button 2: Skip
             Close After (Seconds): 30
             First Visible Index: 0 ]
        
        A4: Perform Task [
             Name: Add Show
             Priority: %priority
             Structure Output (JSON, etc): On ]
            If  [ %ld_button ~ Add ]
        
        A5: Goto [
             Type: Action Label
             Label: List ]
            If  [ %ld_button ~ Add ]
        
        A6: Stop [
             Task: Change Show ]
            If  [ %ld_button ~ Skip ]
        
        A7: Variable Set [
             Name: %track_Show
             To: %ld_selected
             Max Rounding Digits: 3
             Structure Output (JSON, etc): On ]
        
        A8: Profile Status [
             Name: Notify
             Set: Off ]
        
        A9: Flash [
             Text: Tracking %track_Show
             Long: On
             Continue Task Immediately: On
             Dismiss On Click: On ]
        
        
    
        Task: Guide
        
        <<h1><big><big><big>🦊</big></big></big></h1><h3>Project by <b><font color="red">WhirlWolf</font></b></h3><br>
        
        
        <h2>HOW TO USE ⁉️</h2>
        
        Run <b>Add Show</b> & follow on screen instructions.
        
        This is all you need to know.
        
        
        <h2>FEATURES 🎛️</h2>
        
        <b>1. Track 📺 :</b> Any show ( Anime, TV Show, Netflix Show, etc ) available on https://next-episode.net<br><br>
        
        <i>Note : This project is completely based on this website so i have included source link in scene so you can check this wonderful website with alot more details.</i><br><br>
        
        <b>2. Reminder 🔔 : </b>On the day of release of new episode & within 1 hour of release time.<br><br>
        
        <i>Tip : Within 1 hour notification can be set by tapping on notify in release day notification or in scene.</i><br><br>
        
        <s><b>3. Master Task ⚙️ : </b>Manually check any episode details.<br><br>
        
        <i>Note : Any episode you check manually will be set to track globally so make sure last show you check is the one you want to track or you can change manually using <b>Change Show</b>.</i><br><br></s>
        
        <b>4. Countdown ⏱️ : </b>Displayed in scene.<br><br>
        
        <i>Tip 1 : Tap on it to see release date & vice versa</i><br><br>
        
        <i>Tip 2 : Tap & hold on it to see when and where it airs.<br>[Note : Source is not displayed accurate every time]</i><br><br>
        
        <b>5. Episode Details ℹ️ : </b>Both next & previous episode's basic information.<br><br>
        
        <b>6. Rating ⭐ : </b>This isn't required but nevertheless you can check it in scene by tapping on show name.<br><br>
        
        
        <h2>MISSING/LIMITATIONS/NICE TO HAVE 😕</h2>
        
        <b>1. Multi Tracking : </b>Only 1 episode can be tracked at a time. I'll try add this as it will be awesome<br><br>
        
        <b>1. Download : </b>No download option.<br><br>>
        A1: Anchor
        
        
    
        Task: Add Show
        
        A1: HTTP Request [
             Method: GET
             URL: www.google.com
             Timeout (Seconds): 30
             Structure Output (JSON, etc): On
             Continue Task After Error:On ]
        
        A2: Flash [
             Text: Please connect to internet . . .
             Long: On
             Continue Task Immediately: On
             Dismiss On Click: On ]
            If  [ %http_response_code !~ 200 ]
        
        A3: Stop [
             Task: Add Show ]
            If  [ %http_response_code !~ 200 ]
        
        A4: Flash [
             Text: Redirecting to chrome . . .
             
             This process will end in about 60 seconds.
             Long: On
             Dismiss On Click: On ]
        
        A5: Set Clipboard [
             Text: some text ]
        
        A6: Browse URL [
             URL: https://next-episode.net ]
        
        A7: For [
             Variable: %var
             Items: 1:3
             Structure Output (JSON, etc): On ]
        
            A8: Flash [
                 Text: Step 1: Browse show
                 
                 Step 2: Copy url
                 
                 Step 3: Wait until you are redirected
                 Long: On
                 Dismiss On Click: On ]
        
            A9: Wait [
                 MS: 0
                 Seconds: 18
                 Minutes: 0
                 Hours: 0
                 Days: 0 ]
        
            A10: Get Clipboard [ ]
        
            A11: Goto [
                  Type: Action Label
                  Label: Url Copied ]
                If  [ %CLIP ~R https\:\/\/next\-episode\.net\/.+ ]
        
        A12: End For
        
        A13: Stop [
              Task: Add Show ]
        
        <Url Copied>
        A14: Load Last App
        
        A15: Flash [
              Text: Checking status . . .
              Long: On
              Continue Task Immediately: On
              Dismiss On Click: On ]
        
        A16: Variable Set [
              Name: %url
              To: %CLIP
              Max Rounding Digits: 3
              Structure Output (JSON, etc): On ]
        
        A17: HTTP Request [
              Method: GET
              URL: %url
              Timeout (Seconds): 30
              Structure Output (JSON, etc): On ]
        
        A18: Simple Match/Regex [
              Type: Simple
              Text: %http_data
              Match Pattern: <div class="subheadline"><h3>Status:</h3></div>$status<div></div> ]
        
        A19: Goto [
              Type: Action Label
              Label: Available ]
            If  [ %status !~ *Ended* ]
        
        A20: Flash [
              Text: This show cannot be tracked as it's %status.
              Long: On
              Dismiss On Click: On ]
        
        A21: Stop [
              Task: Add Show ]
        
        <Available>
        A22: Variable Split [
              Name: %url
              Splitter: .net/ ]
        
        A23: Flash [
              Text: Adding %url2
              Long: On
              Dismiss On Click: On ]
        
        A24: Array Push [
              Variable Array: %showS
              Position: 99
              Value: %url2
              Fill Spaces: On ]
        
        A25: Array Process [
              Variable Array: %showS
              Type: Remove Duplicates ]
        
        A26: Array Process [
              Variable Array: %showS
              Type: Sort Alpha ]
        
        A27: Variable Set [
              Name: %track_Show
              To: %url2
              Max Rounding Digits: 3
              Structure Output (JSON, etc): On ]
            If  [ %showS(#) eq 1 ]
        
        A28: Profile Status [
              Name: Tracker
              Set: On ]
            If  [ %showS(#) eq 1 ]
        
        A29: Flash [
              Text: Done
              Continue Task Immediately: On
              Dismiss On Click: On ]
        
        A30: Flash [
              Text: Tap to select show for tracking.
              Long: On
              Tasker Layout: On
              Task: Change Show
              Dismiss On Click: On ]
            If  [ %showS(#) > 1 ]
        
        
